FROM ubuntu:16.04
MAINTAINER GOVTECH <chong_hon_fah@tech.gov.sg>

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        gcc \
        git \
        libcurl3-dev \
        libfreetype6-dev \
	libhdf5-serial-dev \
        libpng12-dev \
        libzmq3-dev \
        openjdk-8-jdk openjdk-8-jre-headless \
        pkg-config \
        python python-dev python-numpy python-pip \
        rsync \
        software-properties-common \
        swig \
        vim \
        wget \
        unzip zip \
        zlib1g-dev && \
    apt-get clean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

RUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py && \
    python get-pip.py && \
    rm get-pip.py

RUN pip --no-cache-dir install \
	Cython \
        git+https://github.com/scikit-learn/scikit-learn.git \
	h5py \
        ipykernel \
        jupyter \
	keras_applications \
        keras_preprocessing \
        matplotlib \
	mock \
        numpy \
        pandas \
        psutil \
        Pillow \
	requests \
        scipy && \
    python -m ipykernel.kernelspec

# Set up Bazel.

# Running bazel inside a `docker build` command causes trouble, cf:
#   https://github.com/bazelbuild/bazel/issues/134
# The easiest solution is to set up a bazelrc file forcing --batch.
RUN echo "startup --batch" >>/etc/bazel.bazelrc
# Similarly, we need to workaround sandboxing issues:
#   https://github.com/bazelbuild/bazel/issues/418
RUN echo "build --spawn_strategy=standalone --genrule_strategy=standalone" \
    >>/etc/bazel.bazelrc
# Install the most recent bazel release.
ENV BAZEL_VERSION 0.15.0
WORKDIR /
RUN mkdir /bazel && \
    cd /bazel && \
    curl -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \
    curl -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \
    chmod +x bazel-*.sh && \
    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \
    cd / && \
    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh

WORKDIR /
RUN git clone --recurse-submodules https://github.com/hfchong/fold.git

ENV CI_BUILD_PYTHON=python
ENV PYTHON_BIN_PATH=/usr/bin/python
ENV PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages
ENV CC_OPT_FLAGS='-march=native'
ENV TF_NEED_JEMALLOC=0
ENV TF_NEED_GCP=0
ENV TF_NEED_CUDA=0
ENV TF_NEED_HDFS=0
ENV TF_NEED_S3=0
ENV TF_NEED_OPENCL=0
ENV TF_NEED_GDR=0
ENV TF_ENABLE_XLA=0
ENV TF_NEED_VERBS=0
ENV TF_NEED_MPI=0

WORKDIR /fold/tensorflow
RUN tensorflow/tools/ci_build/builds/configured CPU \
    bazel build -c opt --cxxopt="-D_GLIBCXX_USE_CXX11_ABI=0" --copt="-mavx" \
        tensorflow/tools/pip_package:build_pip_package

WORKDIR /fold
RUN bazel --bazelrc=tensorflow/.tf_configure.bazelrc build -c opt --cxxopt="-D_GLIBCXX_USE_CXX11_ABI=0" --copt="-mavx" \
       tensorflow_fold/util:build_pip_package

RUN bazel-bin/tensorflow_fold/util/build_pip_package /tmp/fold_pkg && \
    cd tensorflow && \
    bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow-pip && \
    pip --no-cache-dir install --upgrade /tmp/fold_pkg/*.whl && \
    pip --no-cache-dir install --upgrade /tmp/tensorflow-pip/*.whl && \
    rm -rf /tmp/fold_pkg && \
    rm -rf /tmp/tensorflow-pip && \
    rm -rf /root/.cache

COPY jupyter_notebook_config.py /root/.jupyter/

# Jupyter has issues with being run directly:
#   https://github.com/ipython/ipython/issues/7062
# We just add a little wrapper script.
COPY run_jupyter.sh /

# TensorBoard
EXPOSE 6006
# IPython
EXPOSE 8888

WORKDIR "/workdir"

CMD ["/run_jupyter.sh", "--allow-root"]
